#include "Parser/Stmts.hpp"

namespace sc
{
///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtBlock ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtBlock::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &stmt : stmts) {
		stmt->clearValue();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtType /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtType::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	expr->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////// StmtSimple /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtSimple::clearValue() {}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////// StmtFnCallInfo ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtFnCallInfo::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &a : args) {
		a->clearValue();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtExpr /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtExpr::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	lhs->clearValue();
	if(rhs) rhs->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtVar //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtVar::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(vtype) vtype->clearValue();
	if(vval) vval->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtFnSig ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtFnSig::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &a : args) a->clearValue();
	if(rettype) rettype->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtFnDef ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtFnDef::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	sig->clearValue();
	if(blk) blk->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////// StmtHeader /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtHeader::clearValue()
{
	if(getVal()) getVal()->clearHasData();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtLib //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtLib::clearValue()
{
	if(getVal()) getVal()->clearHasData();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////// StmtExtern /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtExtern::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(headers) headers->clearValue();
	if(libs) libs->clearValue();
	entity->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// StmtEnum //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtEnum::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(tagty) tagty->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// StmtStruct //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtStruct::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &f : fields) f->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// StmtVarDecl /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtVarDecl::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &d : decls) d->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtCond /////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtCond::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	for(auto &c : conds) {
		if(c.getCond()) c.getCond()->clearValue();
		if(c.getBlk()) c.getBlk()->clearValue();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtFor //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtFor::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(init) init->clearValue();
	if(cond) cond->clearValue();
	if(incr) incr->clearValue();
	if(blk) blk->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtRet //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtRet::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(val) val->clearValue();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////// StmtContinue ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtContinue::clearValue()
{
	if(getVal()) getVal()->clearHasData();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtBreak ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtBreak::clearValue()
{
	if(getVal()) getVal()->clearHasData();
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////// StmtDefer ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

void StmtDefer::clearValue()
{
	if(getVal()) getVal()->clearHasData();
	if(val) val->clearValue();
}

} // namespace sc